/*Colors*/
/** Background classes **/
@import url("https://fonts.googleapis.com/css2?family=Paytone+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Paytone+One&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
.bg-white {
  background-color: #FFFFFF;
}

.bg-primary {
  background-color: #B24DC2;
}

.bg-secondary {
  background-color: #373737;
}

.bg-grey {
  background-color: #F8F8F8;
}

/** text classes **/
/*Colors*/
/** Background classes **/
.bg-white {
  background-color: #FFFFFF;
}

.bg-primary {
  background-color: #B24DC2;
}

.bg-secondary {
  background-color: #373737;
}

.bg-grey {
  background-color: #F8F8F8;
}

/** text classes **/
/* GENERAL COMPONENTS */
.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 12px 20px;
  border: 2px solid #B24DC2;
  border-radius: 999px;
  width: -moz-fit-content;
  width: fit-content;
}
.btn__text {
  font-size: 16px;
  color: #B24DC2;
}
@media (min-width: 769px) {
  .btn__text {
    font-size: 32px;
  }
}
.btn__icon {
  margin-left: 14px;
}
.btn__icon svg {
  width: 29px;
  height: 10px;
}
.btn:hover {
  background-color: #FCE8FF;
}
.btn.btn-white {
  border: 2px solid #FFFFFF;
}
.btn.btn-white .btn__text {
  color: #FFFFFF;
}
.btn.btn-white .btn__icon svg {
  stroke: #FFFFFF;
}

.footer {
  background-color: #A031B2;
}
.footer__wrapper {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-between;
}
@media (min-width: 769px) {
  .footer__wrapper {
    flex-direction: row;
  }
}
@media (min-width: 769px) {
  .footer__col:first-child {
    max-width: 402px;
  }
  .footer__col:last-child {
    max-width: 538px;
  }
}
.footer__col + .footer__col {
  margin-top: 43px;
}
@media (min-width: 769px) {
  .footer__col + .footer__col {
    margin-top: 0;
  }
}
.footer-logo {
  width: 147px;
  height: 66px;
  margin-bottom: 42px;
}
@media (min-width: 769px) {
  .footer-logo {
    width: 265px;
    height: 120px;
  }
}
.footer-logo img {
  width: 100%;
  height: 100%;
}
.footer-title {
  color: #FFFFFF;
  text-transform: uppercase;
  font-weight: 700;
  font-size: 24px;
  margin-bottom: 12px;
}
@media (min-width: 769px) {
  .footer-title {
    font-size: 36px;
    margin-bottom: 26px;
  }
}
.footer-texts {
  color: #FFFFFF;
  font-size: 20px;
}
@media (min-width: 769px) {
  .footer-texts {
    font-size: 32px;
  }
}
.footer-texts a {
  text-transform: uppercase;
  display: block;
  color: #FFFFFF;
  font-size: 20px;
}
@media (min-width: 769px) {
  .footer-texts a {
    font-size: 32px;
    line-height: 34.91px;
  }
}
.footer-texts a:hover {
  text-decoration: underline;
}
.footer-texts a + a {
  margin-top: 20px;
}
.footer-texts p {
  line-height: 21.82px;
}
@media (min-width: 769px) {
  .footer-texts p {
    font-size: 32px;
    line-height: 34.91px;
  }
}
.footer-texts form {
  margin-top: 32px;
}
@media (min-width: 769px) {
  .footer-texts form {
    margin-top: 26px;
  }
}
.footer-texts form .btn {
  margin: 0 auto;
  margin-top: 17px;
}
@media (min-width: 769px) {
  .footer-texts form .btn {
    margin: inherit;
    margin-top: 26px;
  }
  .footer-texts form .btn .btn__text {
    font-size: 24px;
  }
  .footer-texts form .btn .btn__icon svg {
    height: 18px;
  }
}

.copyright {
  padding: 14px 20px;
}
.copyright p {
  font-size: 14px;
  color: #8B8B8B;
  text-align: center;
  text-transform: uppercase;
}
@media (min-width: 769px) {
  .copyright p {
    font-size: 16px;
  }
}

input {
  padding: 11px 29px;
  border-radius: 999px;
  background-color: transparent;
  border: 2px solid #FFFFFF;
  font-family: "Barlow Condensed", sans-serif;
  font-size: 16px;
  width: -webkit-fill-available;
}
@media (min-width: 769px) {
  input {
    padding: 14px 29px;
    font-size: 24px;
  }
}
input + input {
  margin-top: 10px;
}
input::-moz-placeholder {
  color: #FFFFFF;
  font-family: "Barlow Condensed", sans-serif;
  font-size: 16px;
  text-transform: uppercase;
}
input::placeholder {
  color: #FFFFFF;
  font-family: "Barlow Condensed", sans-serif;
  font-size: 16px;
  text-transform: uppercase;
}
@media (min-width: 769px) {
  input::-moz-placeholder {
    font-size: 24px;
  }
  input::placeholder {
    font-size: 24px;
  }
}
input:focus {
  outline: none;
}

.header__wrapper {
  display: flex;
  justify-content: space-between;
}
.header__logo {
  max-width: 73px;
}
@media (min-width: 769px) {
  .header__logo {
    max-width: 149px;
  }
}
.header__logo img {
  width: 100%;
  height: auto;
}

/*Utilities*/
/* #### Generated By: http://www.cufonfonts.com #### */
@font-face {
  font-family: "Barlow Regular";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Regular"), url("../../assets/fonts/Barlow-Regular.woff") format("woff");
}
@font-face {
  font-family: "Barlow Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Italic"), url("../../assets/fonts/Barlow-Italic.woff") format("woff");
}
@font-face {
  font-family: "Barlow Thin";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Thin"), url("../../assets/fonts/Barlow-Thin.woff") format("woff");
}
@font-face {
  font-family: "Barlow Thin Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Thin Italic"), url("../../assets/fonts/Barlow-ThinItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow ExtraLight";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow ExtraLight"), url("../../assets/fonts/Barlow-ExtraLight.woff") format("woff");
}
@font-face {
  font-family: "Barlow ExtraLight Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow ExtraLight Italic"), url("../../assets/fonts/Barlow-ExtraLightItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow Light";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Light"), url("../../assets/fonts/Barlow-Light.woff") format("woff");
}
@font-face {
  font-family: "Barlow Light Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Light Italic"), url("../../assets/fonts/Barlow-LightItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow Medium";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Medium"), url("../../assets/fonts/Barlow-Medium.woff") format("woff");
}
@font-face {
  font-family: "Barlow Medium Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Medium Italic"), url("../../assets/fonts/Barlow-MediumItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow SemiBold";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow SemiBold"), url("../../assets/fonts/Barlow-SemiBold.woff") format("woff");
}
@font-face {
  font-family: "Barlow SemiBold Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow SemiBold Italic"), url("../../assets/fonts/Barlow-SemiBoldItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow Bold";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Bold"), url("../../assets/fonts/Barlow-Bold.woff") format("woff");
}
@font-face {
  font-family: "Barlow Bold Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Bold Italic"), url("../../assets/fonts/Barlow-BoldItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow ExtraBold";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow ExtraBold"), url("../../assets/fonts/Barlow-ExtraBold.woff") format("woff");
}
@font-face {
  font-family: "Barlow ExtraBold Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow ExtraBold Italic"), url("../../assets/fonts/Barlow-ExtraBoldItalic.woff") format("woff");
}
@font-face {
  font-family: "Barlow Black";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Black"), url("../../assets/fonts/Barlow-Black.woff") format("woff");
}
@font-face {
  font-family: "Barlow Black Italic";
  font-style: normal;
  font-weight: normal;
  src: local("Barlow Black Italic"), url("../../assets/fonts/Barlow-BlackItalic.woff") format("woff");
}
/* PARTIAL COMPONENTS */
.two-column {
  background-color: #F8F8F8;
}
.two-column__wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
}
@media (min-width: 769px) {
  .two-column__wrapper {
    flex-direction: row;
    gap: 170px;
  }
}
.two-column__copy {
  width: 100%;
}
.two-column__copy h4 {
  margin-bottom: 16px;
}
.two-column__copy .btn {
  display: none;
  margin-top: 50px;
}
@media (min-width: 769px) {
  .two-column__copy .btn {
    margin-top: 70px;
  }
}
.two-column__image {
  width: 100%;
}
.two-column__image img {
  width: 100%;
  height: auto;
}
.two-column.reversed .two-column__wrapper {
  flex-direction: column-reverse;
}
@media (min-width: 769px) {
  .two-column.reversed .two-column__wrapper {
    flex-direction: row-reverse;
  }
}
.two-column.has__btn .btn {
  display: block;
}

.product-heading {
  color: #B24DC2;
  width: 709px;
  text-align: center;
  margin: 0 auto;
}

.product-subtitle {
  margin-top: 28px;
  font-size: 48px;
}

.product-container {
  display: flex;
  margin: 200px 0;
  flex-wrap: nowrap;
  justify-content: space-around;
}

.product-child {
  position: relative;
}

.product-1 {
  position: absolute;
  left: 65px;
  bottom: 50px;
}

.product-btn {
  display: flex;
  justify-content: center;
  margin-top: -50px;
}

.full {
  max-width: 100%;
  height: 100%;
  position: relative;
}

.full .heroText {
  position: absolute;
  z-index: 200;
  padding-top: 40vh;
  padding-left: 10%;
}

/*! critical:start */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  text-decoration: none;
  color: inherit;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  font-family: "Barlow Condensed", sans-serif;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

button {
  -webkit-appearance: none;
  border-radius: 0;
  text-align: inherit;
  background: none;
  box-shadow: none;
  padding: 0;
  cursor: pointer;
  border: none;
  color: inherit;
  font: inherit;
}

/*FORMAT*/
h1, h2, h3, h4, h5, h6 {
  color: #B24DC2;
  text-transform: uppercase;
}

h1, .h1 {
  font-family: "Paytone One", sans-serif;
  font-size: 40px;
  line-height: 43.64px;
}
@media (min-width: 769px) {
  h1, .h1 {
    font-size: 115px;
    line-height: 125.46px;
  }
}

h2, .h2 {
  font-family: "Paytone One", sans-serif;
  font-size: 36px;
  line-height: 39.28px;
}
@media (min-width: 769px) {
  h2, .h2 {
    font-size: 96px;
    line-height: 104.74px;
  }
}

h3, .h3 {
  font-family: "Paytone One", sans-serif;
  font-size: 36px;
  line-height: 39.28px;
}
@media (min-width: 769px) {
  h3, .h3 {
    font-size: 64px;
    line-height: 69.82px;
  }
}

h4, .h4 {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 36px;
  line-height: 39.28px;
}
@media (min-width: 769px) {
  h4, .h4 {
    font-size: 48px;
    line-height: 52.37px;
  }
}

h5, .h5, h6 {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 24px;
  line-height: 28.8px;
}
@media (min-width: 769px) {
  h5, .h5, h6 {
    font-size: 32px;
    line-height: 38.4px;
  }
}

p {
  font-family: "Barlow Condensed", sans-serif;
  font-size: 20px;
  line-height: 21.82px;
}
@media (min-width: 769px) {
  p {
    font-size: 32px;
    line-height: 34.91px;
  }
}

strong, b {
  font-family: "Barlow Condensed", sans-serif;
  font-weight: 700;
}

i, em {
  font-family: "Barlow Condensed", sans-serif;
  font-style: italic;
}

strong + i, strong + em, b + i, b + em, i + strong, em + strong, i + b, em + b {
  font-family: "Barlow Condensed", sans-serif;
  font-style: italic;
  font-weight: 700;
}

a {
  color: #B24DC2;
  cursor: pointer;
}

.has-padding__top {
  padding-top: 90px;
}

.has-padding__bottom {
  padding-bottom: 90px;
}

.inner-container {
  max-width: 1392px;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
}

main {
  position: relative;
}

/*! critical:end */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
